{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","mount_file_id":"145Q0da3gDtSarSa5Aeg5_bunas2zqeYe","authorship_tag":"ABX9TyPAYgkgl6XXE4TF794v7dBz"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"PQLC8wYQ8cWP","executionInfo":{"status":"ok","timestamp":1735203634078,"user_tz":-330,"elapsed":38745,"user":{"displayName":"SHAHIDKHAN S 22ADR099","userId":"04241991466908434314"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"15f5d88b-9376-437a-9c43-8cfa7ea26b71"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/layers/core/embedding.py:90: UserWarning: Argument `input_length` is deprecated. Just remove it.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1/20\n","29/29 - 10s - 353ms/step - accuracy: 0.2048 - loss: 1.6484 - val_accuracy: 0.2522 - val_loss: 1.6088\n","Epoch 2/20\n","29/29 - 5s - 166ms/step - accuracy: 0.2135 - loss: 1.6083 - val_accuracy: 0.1696 - val_loss: 1.6071\n","Epoch 3/20\n","29/29 - 2s - 55ms/step - accuracy: 0.3333 - loss: 1.5416 - val_accuracy: 0.7522 - val_loss: 1.1990\n","Epoch 4/20\n","29/29 - 2s - 54ms/step - accuracy: 0.6122 - loss: 1.0126 - val_accuracy: 0.8522 - val_loss: 0.6090\n","Epoch 5/20\n","29/29 - 3s - 87ms/step - accuracy: 0.7745 - loss: 0.6398 - val_accuracy: 0.9304 - val_loss: 0.3232\n","Epoch 6/20\n","29/29 - 2s - 54ms/step - accuracy: 0.8551 - loss: 0.4175 - val_accuracy: 0.9435 - val_loss: 0.2300\n","Epoch 7/20\n","29/29 - 2s - 55ms/step - accuracy: 0.8965 - loss: 0.3162 - val_accuracy: 0.9522 - val_loss: 0.1935\n","Epoch 8/20\n","29/29 - 2s - 54ms/step - accuracy: 0.9063 - loss: 0.2506 - val_accuracy: 0.9478 - val_loss: 0.1867\n","Epoch 9/20\n","29/29 - 3s - 88ms/step - accuracy: 0.9455 - loss: 0.1758 - val_accuracy: 0.9391 - val_loss: 0.1819\n","Epoch 10/20\n","29/29 - 2s - 57ms/step - accuracy: 0.9423 - loss: 0.2158 - val_accuracy: 0.9435 - val_loss: 0.1749\n","Epoch 11/20\n","29/29 - 2s - 83ms/step - accuracy: 0.9488 - loss: 0.1489 - val_accuracy: 0.9391 - val_loss: 0.2096\n","Epoch 12/20\n","29/29 - 1s - 52ms/step - accuracy: 0.9575 - loss: 0.1348 - val_accuracy: 0.9435 - val_loss: 0.1992\n","Epoch 13/20\n","29/29 - 2s - 52ms/step - accuracy: 0.9575 - loss: 0.1215 - val_accuracy: 0.9435 - val_loss: 0.2028\n","9/9 - 0s - 36ms/step - accuracy: 0.9408 - loss: 0.1689\n","Test Accuracy: 0.9408\n","Test Loss: 0.1689\n","\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 30ms/step\n","CNN Model Classification Report:\n","               precision    recall  f1-score   support\n","\n","           0       0.93      0.88      0.90        58\n","           1       0.98      0.96      0.97        57\n","           2       0.83      0.91      0.87        57\n","           3       1.00      1.00      1.00        58\n","           4       0.98      0.95      0.96        57\n","\n","    accuracy                           0.94       287\n","   macro avg       0.94      0.94      0.94       287\n","weighted avg       0.94      0.94      0.94       287\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Macro F1 Score: 0.9414\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-2-96da085d8ac4>:108: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(x=metrics, y=values, palette=\"viridis\")\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"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r+wfLgNw4xFmAbhNp06dNGjQIH311VcOb7n/0aJFi+Tv769Vq1Y5PFN05syZDv0qV64sm82mXbt2qXbt2gWup2LFitq7d69T+549e+zrpUuh5MpPxZcvX17SpbAaGhqqiRMnOu1j8eLF+uSTTzRlyhQVK1ZMDzzwgMqVK6f58+eradOmWrt2rf1DSFeez44dO9SiRYtCPwYqv9euYsWKstlsOnTokO6++257+x+fkVu2bFkFBQUpNzdXsbGxeR67YsWK+u6772RZlkP9rq5xfuT39VK5cmV9/vnnatKkyTXDqDser1W5cmVJ0nfffed0J/uPoqOjFR0drVGjRmnz5s1q0qSJpkyZopdffvm66wCQP8yZBeA2gYGBmjx5ssaMGaP27dtftZ+Pj4+8vLzsc04l6fDhw06f5u/YsaO8vb310ksv2e8gXmZZ1jXradOmjbZu3aotW7bY29LT0zVt2jRFRkbapy/ExMQoNjbW/lOjRg1dvHhRixcvVrt27fTYY485/cTFxen8+fNaunSpJMnb21uPPfaY/vOf/2j27NnKyclxmGIgXZoneuzYMU2fPt2p1osXL+b56frL8nvtLs8fnjRpkkP7u+++67S/zp07a9GiRfruu++cjnfy5En7f7dp00Y///yzw2PAMjIyrjo94Vry+3rp2rWrcnNzNXbsWKd1OTk5OnPmjH25ePHiDsuF0bJlSwUFBSk5Odnp2b6XX3fnzp1zek5udHS0vL29C/yoMgDXhzuzANzqam9VX6lt27YaP368Hn74YfXo0UMnTpzQxIkTVaVKFf3vf/+z96tSpYpeeOEFjR07Vvfff78effRR+fn56euvv1b58uWVnJyc53FGjhxpf/zT0KFDVbp0aX344Yc6dOiQFi1a5PShsistXbpU58+fV4cOHVyub9iwof0LFC6H1m7duundd99VYmKioqOj7XNzL+vVq5cWLFigp556Sl988YWaNGmi3Nxc7dmzRwsWLLA/J9cd1y4mJkadO3fWhAkT9Ouvv9ofzfXDDz9IcryDOW7cOH3xxRdq0KCBBgwYoBo1auj06dPavn27Pv/8c50+fVrSpQ9Pvffee+rdu7e2bdumcuXKafbs2QoICMiz5rzk5/XSrFkzDRo0SMnJyUpNTVXLli3l6+urffv2aeHChXr77bft821jYmI0efJkvfzyy6pSpYpCQ0PtH7DLr+DgYL311lt68skndd9996lHjx4qVaqUduzYoYyMDH344Ydau3at4uLi1KVLF1WtWlU5OTmaPXu2/Y8DADeRR5+lAMBoVz5qKS+uHs31wQcfWHfffbfl5+dnVatWzZo5c6aVmJhoufpnacaMGVadOnUsPz8/q1SpUlazZs3sj8q62v4vO3DggPXYY49ZJUuWtPz9/a369etby5Ytu+a5tW/f3vL397fS09Ov2qdv376Wr6+v/ZFWNpvNioiIsCRZL7/8ssttsrKyrNdee82Kioqyn09MTIyVlJRknT171t5PkjVkyBCX+8jvtUtPT7eGDBlilS5d2goMDLQ6duxo7d2715JkjRs3zqFvWlqaNWTIECsiIsLy9fW1wsPDrRYtWljTpk1z6HfkyBGrQ4cOVkBAgBUSEmINGzbM/oisgjyaKy9X+/85bdo0KyYmxipWrJgVFBRkRUdHW88995z1888/2/scP37catu2rRUUFGRJsj+mK69j//HRXJctXbrUaty4sVWsWDErODjYql+/vvXvf//bsizLOnjwoPXEE09YlStXtvz9/a3SpUtbzZs3tz7//PM8zw2A+3lZVj7eqwMA3BZSU1NVp04dffTRR+rZs6enywGA68acWQC4TV28eNGpbcKECfL29tYDDzzggYoAwP2YMwsAt6l//vOf2rZtm5o3b64iRYpoxYoVWrFihQYOHOj0GDAAMBXTDADgNrVmzRolJSVp165dunDhgu6880716tVLL7zwgooU4V4GgNuDR6cZfPnll2rfvr3Kly8vLy8vp0fLuLJu3TrVrVtXfn5+qlKlimbNmnXD6wQAEz300EPauHGj/RvO9u/fr8TERIIsgNuKR8Nsenq6atWq5fKB5K4cOnRIbdu2VfPmzZWamqrhw4frySef1KpVq25wpQAAALgV3TLTDLy8vPTJJ5+oY8eOV+3z/PPP67PPPnN4sPfjjz+uM2fOaOXKlTehSgAAANxKjHqvacuWLU5ft9iqVSsNHz78qttkZmY6fBuLzWbT6dOnVaZMGbd87SEAAADcy7IsnT9/XuXLl8/zC24kw8Ls8ePHFRYW5tAWFhamc+fO6eLFiy6/szs5OVlJSUk3q0QAAAC4yY8//qg77rgjzz5GhdnCSEhIUHx8vH357NmzuvPOO3Xo0CEFBQV5sDIAAAC4cv78eVWq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g/mHBSggxg1QOIydW9O17she5tEPgBUtWlQxMTFKSUmxt9lsNqWkpKhRo0Yut2nUqJFDf0las2bNVfsDAADg9uXxaQbx8fHq06eP6tWrp/r162vChAlKT09Xv379JEm9e/dWhQoVlJx8aQ7TsGHD1KxZM7355ptq27at5s2bp2+++UbTpk3z5GkAAADAAzweZrt166aTJ09q9OjROn78uGrXrq2VK1faP+R19OhReXv/3w3kxo0ba+7cuRo1apT+8Y9/6O6779aSJUtUs2ZNT50C3MjPz0+JiYlOU0MAXB3jBigcxs7twcvKzzMPAAAAgFuQx780AQAAACgswiwAAACMRZgFAACAsQiz+NOYNWtWvp8xXJC+AFz74zgaM2aMateu7bF6ANyeCLMG69u3r7y8vPTUU085rRsyZIi8vLzUt2/fm19YPnh5edl/SpQooSZNmmjt2rU39JjdunXTDz/84Pa+uH3dLmMsODhY9913nz799FNPlwXD3S5j4vJP06ZN7etfeeUVNW7cWAEBAQW6mTF9+nTVqlVLgYGBKlmypOrUqWN/nChuDsKs4SIiIjRv3jxdvHjR3vb7779r7ty5uvPOO2/osbOysq5r+5kzZ+qXX37Rpk2bFBISonbt2ungwYMu+2ZnZ1/XsSSpWLFiCg0NdXtf3N5uhzH2zTffqEmTJnrssce0c+dON1WHP6vbYUxc/lm6dKnDvrt06aKnn3463/ubMWOGhg8frqFDhyo1NVWbNm3Sc889pwsXLlxXnXm53mtwOyLMGq5u3bqKiIjQ4sWL7W2LFy/WnXfeqTp16jj0XblypZo2baqSJUuqTJkyateunQ4cOODQ56efflL37t1VunRpFS9eXPXq1dN///tfSf/3FuH777+vSpUqyd/fX9KlZwE/8sgjCgwMVHBwsLp27er0lcOulCxZUuHh4apZs6YmT56sixcvas2aNZIu/QU9efJkdejQQcWLF9crr7wiSfr0009Vt25d+fv766677lJSUpJycnLs+zxz5owGDRqksLAw+fv7q2bNmlq2bJkk57c8d+zYoebNmysoKEjBwcGKiYnRN99847KvJE2ePFmVK1dW0aJFdc8992j27NkO6728vPT++++rU6dOCggI0N133+3wDyXMdDuMsapVq2rs2LHKycnRF198YV//448/qmvXripZsqRKly6tRx55RIcPH3bYx4wZMxQVFSU/Pz+VK1dOcXFx9nXjx49XdHS0ihcvroiICA0ePPiG/hLHreF2GBOXf0qXLm1fl5SUpBEjRig6Ojrf12Lp0qXq2rWr+vfvrypVqigqKkrdu3e3/866LK9xdK1zudo1OHPmjJ588kmVLVtWwcHBevDBB7Vjx4581347IczeBp544gnNnDnTvjxjxgz7N6hdKT09XfHx8frmm2+UkpIib29vderUSTabTZJ04cIFNWvWTMeOHdPSpUu1Y8cOPffcc/b1krR//34tWrRIixcvVmpqqmw2mx555BGdPn1a69ev15o1a3Tw4EF169atQOdQrFgxSY5/cY4ZM0adOnXSzp079cQTT2jDhg3q3bu3hg0bpl27dmnq1KmaNWuW/R8Nm82m1q1ba9OmTfroo4+0a9cujRs3Tj4+Pi6P2bNnT91xxx36+uuvtW3bNo0cOVK+vr4u+37yyScaNmyY/va3v+m7777ToEGD1K9fP4dgIF36x7Br16763//+pzZt2qhnz546ffp0ga4Fbj2mj7GcnBx98MEHki59jbh06d2OVq1aKSgoSBs2bNCmTZsUGBiohx9+2D4OJ0+erCFDhmjgwIHauXOnli5dqipVqtj36+3trXfeeUfff/+9PvzwQ61du1bPPfdcAa4sTGX6mHCX8PBwffXVVzpy5MhV++Q1jvJ7Ln+8BpLUpUsXnThxQitWrNC2bdtUt25dtWjR4s/5O8eCsfr06WM98sgj1okTJyw/Pz/r8OHD1uHDhy1/f3/r5MmT1iOPPGL16dPnqtufPHnSkmTt3LnTsizLmjp1qhUUFGT9+uuvLvsnJiZavr6+1okTJ+xtq1evtnx8fKyjR4/a277//ntLkrV169arHluS9cknn1iWZVnp6enW4MGDLR8fH2vHjh329cOHD3fYpkWLFtarr77q0DZ79myrXLlylmVZ1qpVqyxvb29r7969Lo85c+ZMq0SJEvbloKAga9asWfnq27hxY2vAgAEOfbp06WK1adPG4ZxGjRplX75w4YIlyVqxYoXLY+DWZ/oY8/f3t4oXL255e3tbkqzIyEj7sWfPnm3dc889ls1ms2+TmZlpFStWzFq1apVlWZZVvnx564UXXrj2hfr/Fi5caJUpU8a+/MdxlJiYaNWqVSvf+8Ot53YZE5d/Lv8eutIfX7d5+fnnn62GDRtakqyqVataffr0sebPn2/l5uba++Q1jvJzLq6uwYYNG6zg4GDr999/d9hf5cqVralTp+ar9tsJd2ZvA2XLllXbtm01a9YszZw5U23btlVISIhTv3379ql79+666667FBwcrMjISEmX3uKQpNTUVNWpU8fhbZc/qlixosqWLWtf3r17tyIiIhQREWFvq1GjhkqWLKndu3fnWXf37t0VGBiooKAgLVq0SB988IHuvfde+/p69eo59N+xY4deeuklBQYG2n8GDBigX375RRkZGUpNTdUdd9yhqlWr5nncy+Lj4/Xkk08qNjZW48aNc3rr60q7d+9WkyZNHNqaNGnidI5X1l+8eHEFBwfrxIkT+aoHty5Tx9hbb72l1NRUrVixQjVq1ND7779vP/aOHTu0f/9+BQUF2cdT6dKl9fvvv+vAgQM6ceKEfv75Z7Vo0eKq+//888/VokULVahQQUFBQerVq5d+/fVXZWRk5FkXzGf6mLj889BDD+X7nKOiouxjpXXr1pKkcuXKacuWLdq5c6eGDRumnJwc9enTRw8//LBsNts1x1F+z+WP12DHjh26cOGCypQp4/A78dChQ3n+LrtdFfF0AXCPJ554wj4HZ+LEiS77tG/fXhUrVtT06dNVvnx52Ww21axZ0/6W4uW3+vNSvHhxt9X81ltvKTY2ViVKlHAYpFc71oULF5SUlKRHH33Uqa+/v3++6r/SmDFj1KNHD3322WdasWKFEhMTNW/ePHXq1KlgJ3KFP05T8PLycni7DOYycYyFh4erSpUqqlKlimbOnKk2bdpo165dCg0N1YULFxQTE6M5c+Y4bVe2bFl5e+d9r+Pw4cNq166dnn76ab3yyisqXbq0Nm7cqP79+ysrK0sBAQFuOw/cmkweE4WxfPly+4eR/1h3zZo1VbNmTQ0ePFhPPfWU7r//fq1fv97ppkxhufp9WK5cOa1bt86p75/xsZLcmb1NXJ7ndnke3B/9+uuv2rt3r0aNGqUWLVqoevXq+u233xz63HvvvUpNTS3QfJvq1avrxx9/1I8//mhv27Vrl86cOaMaNWrkue3lf1RcBVlX6tatq71799p/OV/54+3trXvvvVc//fRTgR6pVbVqVY0YMUKrV6/Wo48+6jAH7I/nuWnTJoe2TZs2XfMccfswcYxdqX79+oqJibHPMa9bt6727dun0NBQp/FUokQJBQUFKTIyUikpKS73t23bNtlsNr355ptq2LChqlatqp9//jnf9cB8po+JgqpYsaJ9jFSoUOGq/S7XkJ6efs1xVNhzqVu3ro4fP64iRYo4jV9Xd8hvd4TZ24SPj492796tXbt2ufzAU6lSpVSmTBlNmzZN+/fv19q1axUfH+/Qp3v37goPD1fHjh21adMmHTx4UIsWLdKWLVuuetzY2FhFR0erZ8+e2r59u7Zu3arevXurWbNmbvuL9LLRo0frX//6l5KSkvT9999r9+7dmjdvnkaNGiVJatasmR544AF17txZa9as0aFDh7RixQqtXLnSaV8XL15UXFyc1q1bpyNHjmjTpk36+uuvVb16dZfHfvbZZzVr1ixNnjxZ+/bt0/jx47V48WL9/e9/d+s54tZ1O4yx4cOHa+rUqTp27Jh69uypkJAQPfLII9qwYYMOHTqkdevWaejQofrpp58kXXr34s0339Q777yjffv2afv27Xr33XclSVWqVFF2drbeffddHTx4ULNnz9aUKVMKVA/MdjuMiSsdPXpUqampOnr0qHJzc+1TEfJ6QsfTTz+tsWPHatOmTTpy5Ii++uor9e7dW2XLllWjRo0k5T2OCnsusbGxatSokTp27KjVq1fr8OHD2rx5s1544QX7U3n+TAizt5Hg4GAFBwe7XOft7a158+Zp27ZtqlmzpkaMGKHXX3/doU/RokW1evVqhYaGqk2bNoqOjs7zaQDSpbfRP/30U5UqVUoPPPCAYmNjddddd2n+/PluPTdJatWqlZYtW6bVq1frvvvuU8OGDfXWW2+pYsWK9j6LFi3Sfffdp+7du6tGjRp67rnnlJub67QvHx8f/frrr+rdu7eqVq2qrl27qnXr1kpKSnJ57I4dO+rtt9/WG2+8oaioKE2dOlUzZ87UX/7yF7efJ25dpo+xhx9+WJUqVdIrr7yigIAAffnll7rzzjv16KOPqnr16urfv79+//13+zn26dNHEyZM0KRJkxQVFaV27dpp3759kqRatWpp/Pjxeu2111SzZk3NmTOHB8X/CZk+Jq40evRo1alTR4mJibpw4YLq1KmjOnXq5BkOY2Nj9dVXX6lLly6qWrWqOnfuLH9/f6WkpKhMmTKS8h5HhT0XLy8vLV++XA888ID69eunqlWr6vHHH9eRI0cUFhZ2XdfBRF6WZVmeLgIAAAAoDO7MAgAAwFiEWQAAABiLMAsAAABjEWYBAABgLMIsAAAAjEWYBQAAgLEIswAAADAWYRYAAADGIswCAADAWIRZAAAAGIswCwAAAGMRZgEAAGCs/wcXybTzt27txQAAAABJRU5ErkJggg==\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 118ms/step\n","Predictions saved to: /content/drive/MyDrive/Dravidian-2025/Tamil/Text/Test-Output/Base Model/base_cv_CNN_predictions\n"]}],"source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report, confusion_matrix, precision_recall_fscore_support\n","from sklearn.feature_extraction.text import CountVectorizer\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Dropout, Conv1D, MaxPooling1D, Flatten, Embedding\n","from tensorflow.keras.callbacks import EarlyStopping\n","from tensorflow.keras.utils import to_categorical\n","\n","# Load dataset\n","dataset_path = '/content/drive/MyDrive/Dravidian-2025/Tamil/Text/Preprocessed Text/processed_train_data.csv'\n","df = pd.read_csv(dataset_path)\n","\n","X = df['Text']\n","y = pd.get_dummies(df['Label']).values\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42, stratify=df['Label'])\n","\n","# Text Vectorization using CountVectorizer\n","count_vectorizer = CountVectorizer(max_features=20000, ngram_range=(1, 2))  # Using CountVectorizer instead of Tfidf\n","X_train_count = count_vectorizer.fit_transform(X_train).toarray()\n","X_test_count = count_vectorizer.transform(X_test).toarray()\n","\n","# CNN Model\n","def create_cnn_model(input_dim, dropout_rate):\n","    model = Sequential([\n","        # Add an Embedding layer (optional for CNN)\n","        Embedding(input_dim=input_dim, output_dim=128, input_length=input_dim),\n","\n","        # Add Convolutional Layer\n","        Conv1D(filters=128, kernel_size=3, activation='relu', padding='same'),\n","        MaxPooling1D(pool_size=2),\n","        Dropout(dropout_rate),\n","\n","        # Additional convolutional layer (optional)\n","        Conv1D(filters=64, kernel_size=3, activation='relu', padding='same'),\n","        MaxPooling1D(pool_size=2),\n","        Dropout(dropout_rate),\n","\n","        # Flatten the output\n","        Flatten(),\n","\n","        # Fully connected layers\n","        Dense(128, activation='relu'),\n","        Dropout(dropout_rate),\n","        Dense(64, activation='relu'),\n","        Dropout(dropout_rate),\n","\n","        # Output layer for multi-class classification\n","        Dense(y.shape[1], activation='softmax')\n","    ])\n","    model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","    return model\n","\n","dropout_rate = 0.5\n","batch_size = 32\n","epochs = 20\n","input_dim = X_train_count.shape[1]  # Number of features from CountVectorizer\n","\n","# Create CNN model\n","model = create_cnn_model(input_dim, dropout_rate)\n","\n","# Train the model\n","history = model.fit(\n","    X_train_count, y_train,\n","    validation_split=0.2,\n","    epochs=epochs,\n","    batch_size=batch_size,\n","    verbose=2,\n","    callbacks=[EarlyStopping(monitor='val_loss', patience=3, restore_best_weights=True)]\n",")\n","\n","# Evaluate the model on the test set\n","test_loss, test_accuracy = model.evaluate(X_test_count, y_test, verbose=2)\n","print(f\"Test Accuracy: {test_accuracy:.4f}\")\n","print(f\"Test Loss: {test_loss:.4f}\")\n","\n","# Make predictions on the test set\n","y_pred = model.predict(X_test_count)\n","y_pred_labels = y_pred.argmax(axis=1)\n","y_true_labels = y_test.argmax(axis=1)\n","\n","print(\"CNN Model Classification Report:\\n\", classification_report(y_true_labels, y_pred_labels))\n","\n","# Plot Confusion Matrix\n","conf_matrix = confusion_matrix(y_true_labels, y_pred_labels)\n","plt.figure(figsize=(6, 5))\n","sns.heatmap(conf_matrix, annot=True, fmt=\"d\", cmap=\"Blues\", cbar=True)\n","plt.title(\"Confusion Matrix\")\n","plt.xlabel(\"Predicted\")\n","plt.ylabel(\"True\")\n","plt.show()\n","\n","# Calculate Macro Precision, Recall, and F1 Score\n","macro_precision, macro_recall, macro_f1, _ = precision_recall_fscore_support(\n","    y_true_labels, y_pred_labels, average=\"macro\"\n",")\n","\n","# Print Macro F1 Score\n","print(f\"Macro F1 Score: {macro_f1:.4f}\")\n","\n","metrics = [\"Macro Precision\", \"Macro Recall\", \"Macro F1-Score\"]\n","values = [macro_precision, macro_recall, macro_f1]\n","\n","plt.figure(figsize=(8, 5))\n","sns.barplot(x=metrics, y=values, palette=\"viridis\")\n","plt.title(\"Macro-Averaged Metrics\")\n","plt.ylabel(\"Score\")\n","plt.ylim(0, 1)\n","plt.grid(axis=\"y\")\n","plt.show()\n","\n","# Process new test data\n","test_dataset_path = '/content/drive/MyDrive/Dravidian-2025/Tamil/Text/Preprocessed Text/processed_test_data.csv'\n","test_df = pd.read_csv(test_dataset_path)\n","\n","X_test_new = test_df['Transcript']\n","\n","# Transform new test data using the same CountVectorizer\n","X_test_new_count = count_vectorizer.transform(X_test_new).toarray()\n","\n","# Predict using the CNN model\n","y_pred_new = model.predict(X_test_new_count)\n","y_pred_labels_new = y_pred_new.argmax(axis=1)\n","\n","# Map the predicted labels to original label names\n","label_columns = pd.get_dummies(df['Label']).columns\n","predicted_labels = label_columns[y_pred_labels_new]\n","\n","# Add predictions to the test dataframe\n","test_df['CNN'] = predicted_labels\n","\n","# Save the predictions to a CSV file\n","output_path = '/content/drive/MyDrive/Dravidian-2025/Tamil/Text/Test-Output/Base Model/base_cv_CNN_predictions'\n","test_df[['Transcript', 'CNN']].to_csv(output_path, index=False)\n","\n","print(f\"Predictions saved to: {output_path}\")\n"]}]}